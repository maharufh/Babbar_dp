class Solution {
public:
    int solve(int n,vector<int>&obstacles,int lane,int pos,vector<vector<int>>&dp)
    {
        if(pos == n-1)
        return 0;

        if(dp[lane][pos]!= -1)
            return dp[lane][pos];

        if(obstacles[pos+1]!= lane)
            return solve(n,obstacles,lane,pos+1,dp);
        
        int ans =1e9;

            for(int k = 1;k<=3;k++)
            {
                if(lane != k && obstacles[pos]!=k)
                {
                    ans = min(ans,1+solve(n,obstacles,k,pos,dp));
                }   
            }
            dp[lane][pos] = ans;
            return ans;
    }
    int minSideJumps(vector<int>& obstacles) {
        int n = obstacles.size();
    vector<vector<int>>dp(4,vector<int>(n,-1));
        return solve(n,obstacles,2,0,dp);
    }
};
